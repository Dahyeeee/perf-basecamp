{"version":3,"file":"242.bundle.js","mappings":"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","sources":["webpack://frontend-performance-basecamp/./src/apis/gifAPIService.ts","webpack://frontend-performance-basecamp/./src/pages/Search/hooks/useGifSearch.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/SearchBar/SearchBar.module.css?6e52","webpack://frontend-performance-basecamp/./src/pages/Search/components/SearchBar/SearchBar.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/ResultTitle/ResultTitle.module.css?5009","webpack://frontend-performance-basecamp/./src/pages/Search/components/ResultTitle/ResultTitle.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/GifItem/GifItem.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/GifItem/GifItem.module.css?f94b","webpack://frontend-performance-basecamp/./src/pages/Search/components/SearchResult/SearchResult.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/SearchResult/SearchResult.module.css?fa48","webpack://frontend-performance-basecamp/./src/models/help/artist.ts","webpack://frontend-performance-basecamp/./src/constants/artistData.ts","webpack://frontend-performance-basecamp/./src/pages/Search/components/ArtistInfo/ArtistInfo.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/ArtistInfo/ArtistInfo.module.css?1a7e","webpack://frontend-performance-basecamp/./src/pages/Search/components/ArtistList/ArtistList.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/HelpPanel/HelpPanel.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/components/HelpPanel/HelpPanel.module.css?d962","webpack://frontend-performance-basecamp/./src/pages/Search/Search.tsx","webpack://frontend-performance-basecamp/./src/pages/Search/Search.module.css?33b5"],"sourcesContent":["import { GifsResult, GiphyFetch, SearchOptions } from '@giphy/js-fetch-api';\r\nimport { IGif } from '@giphy/js-types';\r\n\r\nimport { GifImageModel } from '../models/image/gifImage';\r\n\r\nconst apiKey = process.env.GIPHY_API_KEY || '';\r\nconst gf = new GiphyFetch(apiKey);\r\n\r\nconst DEFAULT_FETCH_COUNT = 16;\r\nconst TRENDING_GIF_API = `https://api.giphy.com/v1/gifs/trending?api_key=${process.env.GIPHY_API_KEY}&limit=${DEFAULT_FETCH_COUNT}&rating=g`;\r\n\r\nfunction convertResponseToModel(gifList: IGif[]): GifImageModel[] {\r\n  return gifList.map((gif) => {\r\n    const { id, title, images } = gif;\r\n\r\n    return {\r\n      id,\r\n      title,\r\n      imageUrl: images.original.url\r\n    };\r\n  });\r\n}\r\n\r\nexport const gifAPIService = {\r\n  /**\r\n   * treding gif 목록을 가져옵니다.\r\n   * @returns {Promise<GifImageModel[]>}\r\n   * @ref https://developers.giphy.com/docs/api/endpoint#!/gifs/trending\r\n   */\r\n  getTrending: async function (): Promise<GifImageModel[]> {\r\n    try {\r\n      const gifs: GifsResult = await fetch(TRENDING_GIF_API).then((res) => res.json());\r\n      return convertResponseToModel(gifs.data);\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  },\r\n  /**\r\n   * 검색어에 맞는 gif 목록을 가져옵니다.\r\n   * @param {string} keyword\r\n   * @param {number} page\r\n   * @returns {Promise<GifImageModel[]>}\r\n   * @ref https://developers.giphy.com/docs/api/endpoint#!/gifs/search\r\n   */\r\n  searchByKeyword: async function (keyword: string, page: number): Promise<GifImageModel[]> {\r\n    const searchOptions: SearchOptions = {\r\n      limit: DEFAULT_FETCH_COUNT,\r\n      lang: 'en',\r\n      offset: page * DEFAULT_FETCH_COUNT\r\n    };\r\n\r\n    try {\r\n      const gifs: GifsResult = await gf.search(keyword, searchOptions);\r\n      return convertResponseToModel(gifs.data);\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  }\r\n};\r\n","import { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport { gifAPIService } from '../../../apis/gifAPIService';\r\nimport { GifImageModel } from '../../../models/image/gifImage';\r\n\r\nconst DEFAULT_PAGE_INDEX = 0;\r\n\r\nexport const SEARCH_STATUS = {\r\n  BEFORE_SEARCH: 'BEFORE_SEARCH',\r\n  LOADING: 'LOADING',\r\n  FOUND: 'FOUND',\r\n  NO_RESULT: 'NO_RESULT'\r\n} as const;\r\n\r\nexport type SearchStatus = typeof SEARCH_STATUS[keyof typeof SEARCH_STATUS];\r\n\r\nconst useGifSearch = () => {\r\n  const [status, setStatus] = useState<SearchStatus>(SEARCH_STATUS.BEFORE_SEARCH);\r\n  const [currentPageIndex, setCurrentPageIndex] = useState(DEFAULT_PAGE_INDEX);\r\n  const [gifList, setGifList] = useState<GifImageModel[]>([]);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n  const updateSearchKeyword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchKeyword(e.target.value);\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setStatus(SEARCH_STATUS.LOADING);\r\n    setCurrentPageIndex(DEFAULT_PAGE_INDEX);\r\n  };\r\n\r\n  const searchByKeyword = async () => {\r\n    resetSearch();\r\n\r\n    const gifs: GifImageModel[] = await gifAPIService.searchByKeyword(\r\n      searchKeyword,\r\n      DEFAULT_PAGE_INDEX\r\n    );\r\n\r\n    if (gifs.length === 0) {\r\n      setStatus(SEARCH_STATUS.NO_RESULT);\r\n      return;\r\n    }\r\n\r\n    setGifList(gifs);\r\n    setStatus(SEARCH_STATUS.FOUND);\r\n  };\r\n\r\n  const loadMore = async () => {\r\n    const nextPageIndex = currentPageIndex + 1;\r\n    const gifs: GifImageModel[] = await gifAPIService.searchByKeyword(searchKeyword, nextPageIndex);\r\n\r\n    setGifList([...gifList, ...gifs]);\r\n    setCurrentPageIndex(nextPageIndex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      if (status === SEARCH_STATUS.BEFORE_SEARCH) {\r\n        const gifs: GifImageModel[] = await gifAPIService.getTrending();\r\n\r\n        setGifList(gifs);\r\n      }\r\n    };\r\n    fetch();\r\n\r\n    return () => setStatus(SEARCH_STATUS.LOADING);\r\n  }, []);\r\n\r\n  return {\r\n    status,\r\n    searchKeyword,\r\n    gifList,\r\n    searchByKeyword,\r\n    updateSearchKeyword,\r\n    loadMore\r\n  } as const;\r\n};\r\n\r\nexport default useGifSearch;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbarSection\":\"_yRyLCVW_8BrXNu2Ae1I\",\"searchbarContainer\":\"p1yl5o1LGzbcgKpLvnzP\",\"searchbarTitle\":\"tmllUNaCFiCyJ_2LTNUL\",\"searchInput\":\"XZuzNzJP7hkmuiygaxt6\",\"searchButton\":\"_HPJ5AEs_c3uawxix3Uk\"};","import React from 'react';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nimport styles from './SearchBar.module.css';\r\n\r\ntype SearchbarProps = {\r\n  searchKeyword: string;\r\n  onEnter: (e: React.KeyboardEvent<HTMLInputElement>) => void;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onSearch: () => void;\r\n};\r\n\r\nconst SearchBar = ({ searchKeyword, onEnter, onChange, onSearch }: SearchbarProps) => {\r\n  return (\r\n    <section className={styles.searchbarSection}>\r\n      <h3 className={styles.searchbarTitle}>- find the best gif now - </h3>\r\n      <div className={styles.searchbarContainer}>\r\n        <input\r\n          className={styles.searchInput}\r\n          type=\"text\"\r\n          value={searchKeyword}\r\n          onKeyPress={onEnter}\r\n          onChange={onChange}\r\n        />\r\n        <button className={styles.searchButton} type=\"button\" onClick={onSearch}>\r\n          <AiOutlineSearch color=\"white\" size=\"2rem\" />\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"resultTitle\":\"bMX5kwo8awW0wG6uP_MM\"};","import { SearchStatus, SEARCH_STATUS } from '../../hooks/useGifSearch';\r\n\r\nimport styles from './ResultTitle.module.css';\r\n\r\ntype ResultTitleProps = {\r\n  status: SearchStatus;\r\n};\r\n\r\nconst ResultTitle = ({ status }: ResultTitleProps) => {\r\n  switch (status) {\r\n    case SEARCH_STATUS.NO_RESULT:\r\n      return (\r\n        <h3 className={styles.resultTitle}>\r\n          <span>Nothing</span>🥲\r\n        </h3>\r\n      );\r\n    case SEARCH_STATUS.BEFORE_SEARCH:\r\n      return (\r\n        <h3 className={styles.resultTitle}>\r\n          🔥 <span>Trending Now</span> 🔥\r\n        </h3>\r\n      );\r\n    default:\r\n      return (\r\n        <h3 className={styles.resultTitle}>\r\n          <span>We Found...</span>\r\n        </h3>\r\n      );\r\n  }\r\n};\r\n\r\nexport default ResultTitle;\r\n","import { GifImageModel } from '../../../../models/image/gifImage';\r\n\r\nimport styles from './GifItem.module.css';\r\n\r\ntype GifItemProps = Omit<GifImageModel, 'id'>;\r\n\r\nconst GifItem = ({ imageUrl = '', title = '' }: GifItemProps) => {\r\n  return (\r\n    <div className={styles.gifItem}>\r\n      <img className={styles.gifImage} src={imageUrl} />\r\n      <div className={styles.gifTitleContainer}>\r\n        <div className={styles.gifTitleBg}></div>\r\n        <h4 className={styles.gifTitle}>{title}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"gifItem\":\"d9Kx4D_C6coYB4Bq3Y_D\",\"gifImage\":\"_qDfMSZFh0Sj5QB2_372\",\"gifTitleContainer\":\"jmVam4uDiwDe9X0kov9s\",\"gifTitleBg\":\"bESWa5xgNgk178EbWGcc\",\"gifTitle\":\"x8ChTAzHTz86NM8umGRm\"};","import { GifImageModel } from '../../../../models/image/gifImage';\r\n\r\nimport ResultTitle from '../ResultTitle/ResultTitle';\r\nimport GifItem from '../GifItem/GifItem';\r\n\r\nimport { SearchStatus, SEARCH_STATUS } from '../../hooks/useGifSearch';\r\n\r\nimport styles from './SearchResult.module.css';\r\n\r\ntype SearchResultProps = {\r\n  status: SearchStatus;\r\n  gifList: GifImageModel[];\r\n  loadMore: () => void;\r\n};\r\n\r\nconst SearchResult = ({ status, gifList, loadMore }: SearchResultProps) => {\r\n  return (\r\n    <section className={styles.searchResultSection}>\r\n      <ResultTitle status={status} />\r\n      {(status === SEARCH_STATUS.FOUND || status === SEARCH_STATUS.BEFORE_SEARCH) && (\r\n        <div className={styles.gifResultWrapper}>\r\n          {gifList.map((gif: GifImageModel) => (\r\n            <GifItem key={gif.id} imageUrl={gif.imageUrl} title={gif.title} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      {status === SEARCH_STATUS.FOUND && (\r\n        <button className={styles.loadMoreButton} onClick={loadMore}>\r\n          load more\r\n        </button>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchResultSection\":\"de2qwsei5MNiz7eV4rNm\",\"gifResultWrapper\":\"Sk1D0Qs59YRDsSi_PLe_\",\"loadMoreButton\":\"qrKiKyOk1oFYBTmViAam\"};","export const Artist = ({ name = '', profileUrl = '', profileImageUrl = '' }) => ({\r\n  name,\r\n  profileUrl,\r\n  profileImageUrl\r\n});\r\n\r\nexport interface Artist extends ReturnType<typeof Artist> {}\r\n","import { Artist } from '../models/help/artist';\r\n\r\nconst DUMMY_ARTISTS_LENGTH = 500;\r\nconst dummyArtists: Artist[] = [\r\n  {\r\n    name: 'Pola Lucas',\r\n    profileUrl: 'https://giphy.com/polalucas',\r\n    profileImageUrl: 'https://media4.giphy.com/media/gwWAA4PYJLTtyOHkUD/giphy.gif'\r\n  },\r\n  {\r\n    name: 'Yizr',\r\n    profileUrl: 'https://giphy.com/yizr',\r\n    profileImageUrl: 'https://media.giphy.com/avatars/yizr/llqaOJQnpDWZ/200h.gif'\r\n  },\r\n  {\r\n    name: 'YUNGSUNG',\r\n    profileUrl: 'https://giphy.com/yungsung',\r\n    profileImageUrl: 'https://media0.giphy.com/media/lgnOH6bhb1QpUm2k6w/giphy.gif'\r\n  },\r\n  {\r\n    name: 'Kev Lavery',\r\n    profileUrl: 'https://giphy.com/kevlavery',\r\n    profileImageUrl: 'https://media1.giphy.com/media/ZPLluhRJiGwSttn7i2/giphy.gif'\r\n  },\r\n  {\r\n    name: 'Lorna Mills',\r\n    profileUrl: 'https://giphy.com/lornamills',\r\n    profileImageUrl: 'https://media1.giphy.com/media/l0Iyn1gGtCPa3x41a/200.gif'\r\n  }\r\n];\r\n\r\nexport const artists = Array.from({ length: DUMMY_ARTISTS_LENGTH }, (_v, k) =>\r\n  Artist(dummyArtists[k % dummyArtists.length])\r\n);\r\n","import { Artist } from '../../../../models/help/artist';\r\n\r\nimport styles from './ArtistInfo.module.css';\r\n\r\nexport type ArtistProps = {\r\n  artist: Artist;\r\n};\r\n\r\nconst ArtistInfo = ({ artist }: ArtistProps) => {\r\n  const { name, profileUrl, profileImageUrl } = artist;\r\n\r\n  return (\r\n    <li className={styles.artistContainer}>\r\n      <img className={styles.profileImage} src={profileImageUrl} />\r\n      <p>\r\n        <a className={styles.profileUrl} href={profileUrl}>\r\n          {name}\r\n        </a>\r\n      </p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ArtistInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"artistContainer\":\"WS5RuQ_x18SikZHTRyke\",\"profileImage\":\"XNLKxvyVOVu8lOJJSdAt\",\"profileUrl\":\"mdtZcvbaOpN76XOUKbzG\"};","import { Artist } from '../../../../models/help/artist';\r\nimport ArtistInfo from '../ArtistInfo/ArtistInfo';\r\n\r\ntype ArtistListProps = {\r\n  artists: Artist[];\r\n};\r\n\r\nconst ArtistList = ({ artists }: ArtistListProps) => {\r\n  return (\r\n    <ul>\r\n      {artists.map((artist, index) => {\r\n        return <ArtistInfo key={index} artist={artist} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ArtistList;\r\n","import { useState } from 'react';\r\nimport { AiOutlineInfo, AiOutlineClose } from 'react-icons/ai';\r\nimport classNames from 'classnames/bind';\r\n\r\nimport { artists } from '../../../../constants/artistData';\r\nimport ArtistList from '../ArtistList/ArtistList';\r\n\r\nimport styles from './HelpPanel.module.css';\r\n\r\nconst HelpPanel = () => {\r\n  const [isShow, setIsShow] = useState(false);\r\n  const openSheet = () => setIsShow(true);\r\n  const closeSheet = () => setIsShow(false);\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" className={styles.floatingButton} onClick={openSheet}>\r\n        <AiOutlineInfo color=\"white\" size=\"24px\" />\r\n      </button>\r\n      <section\r\n        className={classNames(styles.selectedItemContainer, {\r\n          [styles.showSheet]: isShow\r\n        })}\r\n      >\r\n        <div className={styles.sheetTitleContainer}>\r\n          <h4>What's all this? </h4>\r\n          <button type=\"button\" onClick={closeSheet}>\r\n            <AiOutlineClose size=\"24px\" />\r\n          </button>\r\n        </div>\r\n        <div className={styles.sheetContentsContainer}>\r\n          <img src=\"https://media0.giphy.com/media/3oKIPdiPGxPI7Dze7u/giphy.gif?cid=ecf05e475f5bct6ci09g3pgn43nf6bausx33fj7f96f6ig92&rid=giphy.gif&ct=g\" />\r\n          <p>\r\n            'memegle' is powered by GIPHY, the top source for the best & newest GIFs & Animated\r\n            Stickers online. You can find any gif uploaded on GIPHY here.\r\n          </p>\r\n          <br />\r\n\r\n          <img src=\"https://giphy.com/static/img/artistdirectory_1040.gif\" />\r\n          <p>\r\n            If you want more, you are always welcome to contribute as an artist. Please refer to the\r\n            guideline&nbsp;\r\n            <a href=\"https://support.giphy.com/hc/en-us/articles/360019977552-How-to-Upload\">\r\n              here\r\n            </a>\r\n            &nbsp;and upload your work!\r\n          </p>\r\n          <br />\r\n          <p>Here are some artists you can refer to.</p>\r\n          <br />\r\n          <section>\r\n            <ArtistList artists={artists} />\r\n          </section>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelpPanel;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"floatingButton\":\"jQBPp9XzUlR0s47cyMvy\",\"selectedItemContainer\":\"bI_mJt1zrVbU9rgQ8O9a\",\"showSheet\":\"_xMBJVElyMLYg2be4I3S\",\"sheetTitleContainer\":\"p259JqbBpFGYE_NkFPXj\",\"sheetContentsContainer\":\"_4uL_W0scH3KiWMUSa8z\"};","import { KeyboardEvent } from 'react';\r\nimport useGifSearch from './hooks/useGifSearch';\r\n\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\nimport SearchResult from './components/SearchResult/SearchResult';\r\nimport HelpPanel from './components/HelpPanel/HelpPanel';\r\n\r\nimport styles from './Search.module.css';\r\n\r\nconst Search = () => {\r\n  const { status, searchKeyword, gifList, searchByKeyword, updateSearchKeyword, loadMore } =\r\n    useGifSearch();\r\n\r\n  const handleEnter = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key !== 'Enter') {\r\n      return;\r\n    }\r\n\r\n    searchByKeyword();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.searchContainer}>\r\n      <SearchBar\r\n        searchKeyword={searchKeyword}\r\n        onEnter={handleEnter}\r\n        onChange={updateSearchKeyword}\r\n        onSearch={searchByKeyword}\r\n      />\r\n      <SearchResult status={status} gifList={gifList} loadMore={loadMore} />\r\n      <HelpPanel />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"OXPtcxG6dhJUUZLVn9IN\",\"searchbarSection\":\"_NVurYTpiByfxlisvpzR\",\"searchbarContainer\":\"_IBmZT37YgXzAkcOC_ok\",\"searchbarTitle\":\"emmqCq0u8mPloc40zVmg\",\"searchInput\":\"AIq4k7cZS1EdCykvp5UL\",\"searchButton\":\"_FmPgcKZk2dzVoB60gPV\",\"searchIcon\":\"somzxAx_KoUk4uhEaNQ6\",\"searchResultSection\":\"CNXgYCzg4EJ6YGYjz5yr\",\"resultTitle\":\"NNemcyhYzsoUl3coudLV\",\"gifResultWrapper\":\"P7wROLtiW0M4yQTzvq4W\",\"loadMoreButton\":\"eod4_bWPbqsZatbh_Wd3\"};"],"names":["gf","GiphyFetch","convertResponseToModel","gifList","map","gif","id","title","images","imageUrl","original","url","gifAPIService","getTrending","fetch","then","res","json","data","e","searchByKeyword","keyword","page","searchOptions","limit","lang","offset","search","SEARCH_STATUS","searchKeyword","onEnter","onChange","onSearch","className","type","value","onKeyPress","onClick","color","size","status","src","loadMore","dummyArtists","name","profileUrl","profileImageUrl","artists","Array","from","length","_v","k","Artist","artist","href","index","isShow","setIsShow","useState","updateSearchKeyword","setStatus","currentPageIndex","setCurrentPageIndex","setGifList","setSearchKeyword","useEffect","gifs","target","nextPageIndex","key"],"sourceRoot":""}